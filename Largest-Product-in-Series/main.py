import operator


def adjacent(x, window_size=4):
	"""

	Parameters
	----------
	x
	window_size

	Returns
	-------

	"""
	assert x and window_size, "Please provide a number that we could run some cool maths on"

	# If x was provided in integer format, parse into string
	x = (type(x) == int) and str(x) or x

	x = [int(strx) for strx in x]
	y = x[:-1]
	# z = len(x) - window_size
	for iteration_count in range(1, window_size):
		for index in range(len(y) - 1):
			y[index] *= x[index + iteration_count]

		y.pop(-1)
		# if iteration_count == z:
		# 	break

	return max(y)


if __name__ == '__main__':
	print adjacent('73167176531330624919225119674426574742355349194934969835203127745063262395783180'
	               '169848018694788518438586156078911294949545950173795833195285320880551112540698747'
	               '1585238630507156932909632952274430435576689664895044524452316173185640309871112172'
	               '2383113622298934233803081353362766142828064444866452387493035890729629049156044077'
	               '2390713810515859307960866701724271218839987979087922749219016997208880937766572733'
	               '3001053367881220235421809751254540594752243525849077116705560136048395864467063244'
	               '1572215539753697817977846174064955149290862569321978468622482839722413756570560574'
	               '9026140797296865241453510047482166370484403199890008895243450658541227588666881164'
	               '2717147992444292823086346567481391912316282458617866458359124566529476545682848912'
	               '8831426076900422421902267105562632111110937054421750694165896040807198403850962455'
	               '4443629812309878799272442849091888458015616609791913387549920052406368991256071760'
	               '6058861164671094050775410022569831552000559357297257163626956188267042825248360082'
	               '3257530420752963450', window_size=13)
